worker_processes auto;

events {
    worker_connections 1024;
}

http {
    upstream service1_cluster {
        server service1-instance1:8199;
        server service1-instance2:8199;
        server service1-instance3:8199;
    }

    upstream stop_service {
        server stop-service:8210;  # Use the service name from Docker Compose
    }

    server {
        listen 8198;

        # Basic Authentication
        auth_basic "Restricted Area";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # Set the root and index directive
        root /usr/share/nginx/html;  # This is where Nginx will look for the index.html
        index index.html;  # Ensure the index.html file is served by default

        # Root location - Basic Authentication applied
        location / {
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
            try_files $uri $uri/ =404;  # Serve static files or 404
        }

        # Proxy requests to /api/request to service1_cluster
        location /api/request {
            proxy_pass http://service1_cluster;  # Forward to upstream cluster
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;  # Forward the Authorization header
        }

        # Proxy requests to /api/stop to stop-service
        location /api/stop {
            # proxy_pass http://stop-service:8210;
            proxy_pass http://stop_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }
    }
}
